
v7.2.0:
- add support for translucent & cutout GridPart models
- make GridPart opaqueness independent of placement layer
- Block Bit foliage colors
- make transparent Block Bits work #28

v7.1.3:
- fix NullPointerException from RedstoneControl2/#8
- fix messed up models by vertex format mismatch with optifine shaders
- now microblocks return the aimed part for creative pick item instead of full structure
- fix wire connections to inner ports
- fix microblock parts deleting hollow blocks when placed inside
- fix potential content duping through replicate in Microblock Workbench
- add GateUpdater debug commands
- fix GuiList selection highlights
- fix missing lang entries
- convert other old language files to json (Turkish is still very incomplete)
- add Chinese translation

v7.1.2:
- fix #24 NPE due to null player in BlockItemUseContext

v7.1.1:
- improve face & light occlusion for "sealed" Microblock Structures
- reduce TER performance impact to zero for Microblock Structures with no dynamically rendered parts.
- implement inventory capabilities for Microblock Workbench
- add multi-line editing in text-fields
- updated repository README and github workflow

v7.1.0: (private build)
- API change: GridParts can switch to different implementation for server side during load
- Added ability to shift and rotate Microblock Structures

v7.0.2: (private build)
- add BlockSupplier to grid port API
- improved/fixed FakePlayer
- fix next link id persistence
- fix cable connections
- small Grid API additions
- add Fluid Placement utilities
- add placement event to BlockTE
- add dynamic part rendering
- fix HoloSlot stacking
- add disassemble/replication handling for part contents

v7.0.0: (private build)
- port to MC 1.16.5
- script models now using the new custom json loader system
- added more convenient TileEntity models using the new ModelData system
- implemented fluid slots using re-purposed fake item slots
- entirely removed config script system
- config values can be passed to Documented(Block)Item for use as arguments in extended tool-tips
- removed other minor features not working anymore
- added microblock API for RedstoneControl2

################################# VERSIONS 1.12.2 #################################

v6.6.3:
- fix cover placements acting on client side

v6.6.2:
- ensure BlockState in BaseTileEntity is cached as soon as available to fix issues with devices accessing block info during/after unload
- change micro unit prefix to 'Î¼'

v6.6.1:
- add axis reorientation command for script models
- improved regex oredict listing command (config script)

v6.6.0:
- add annotation based object synchronization for NBT & GUI
WARNING, may break old mods!

v6.5.2
Changes:
- add math library: complex numbers
- add frame timer for implementing fake motion blur
- add ingredient indexing in recipe iterator (script)
- fix item stack size changes in script write through to recipe
- fix AdvancedBlock support not having TileEntity
- let IndexedSet transfer elements on addAll
- fix side only issue on Energy, Fluid & ItemSupply
- fix missing particle texture in BlockMimicModel
- fix wrong class import in StateSynchronizer (caused crash)
- let setting creative tab on BaseItemBlock propagate to block
- fix number formatting (again)

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.5.1
Changes:
- added some public access methods to Signal Link API
- added item nbt utility functions
- added NullEnergyStorage implementation and BlockReference NOP Handler
- made MountedPort hit-boxes slightly smaller
- fixed code safety verifier (for runtime loaded/generated classes) to account for long/double using 2 CPT entries
- added useful creative resource supplies (item, fluid, energy) for testing

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.5.0
Changes:
- fixed crashes by improved Link ID collision handling
- improved Signal Link ID persistence
- extended invalid TileEntity load state fix and debug
- fixed text formatting issues in File Browser
- modified Redstone Control API for teleport compatibility
- improved block teleportation utility functions

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.18
Changes:
- fixed wired connection between RelayPorts and IIntegratedConnectors
- make ALT-tool-tip editing possible via CTRL key to avoid Alt-F4 issues
- fixed issues with network communication attempts on FakePlayers
- auto translate EnumFacing arguments in localized string format
- fixed crash when opening nonexistent directory in FileBrowser

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.17
Changes:
- Redstone Control API: added support for port connectors with integrated logic
- fixed side config render position in GUI component

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.16
Changes:
- fix StateSynchronizer support for encoding individual changes variables
- added GUI components: List, File Browser

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.15
Changes:
- fix NullPointer when computing BlockFaceShape of empty boundingBox
- fix IndexedSet insertion to same index as before
- added more control over zero trimming and sign in unit scale formatting

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.14
Changes:
- fixed NullPointer when computing BlockFaceShape of empty boundingBox
- fixed vertical sliders
- fixed formatted text disappearing behind background sprites
- fixed packet decoding bugs in State Synchronizer
- implemented Holo Slots in new container system
- added Fluid utilities including IFluidHandler implementation for fluid block interaction
- limited BlockReference life span to prevent loop capture exploits [Redstone Control]

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.13
Changes:
- fix potential null-pointer crash when TileEntity added during world tick
- fix bad state synchronizer state when not sending packets (potentially leading to crashes)
- add utility: player armor slots

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.12
Changes:
- fixed #18 sending null as BlockRenderLayer to canRenderInLayer()
- made covers more robust against mods that don't like wrong BlockStates

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.11
Changes:
- allow multiple blocks to use the same TileEntity class
- make BlockReference (RedstoneControl API) NBTSerializable and fix potential world memory leak
- fixed reverse inc/dec buttons in horizontal mode of Spinner gui element

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.10
Changes:
- fixed InductiveLogistics#38 missing fluid container update on filling from empty

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.9
Changes:
- fixed missing block render update when cover changes
- some more small utility fixes related to covers

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.8
Changes:
- added template class for sound events
- moved block cover implementation to AdvancedBlock (so blocks could simultaneously be coverable and have other features like oriented)
- add support for non full block covers (including correct collision)
- Redstone Control API: added method for connectors to handle port relocation

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.7
Changes:
- added some reflection utility
- added inverse placement mode for OrientedBlocks
- other added utilities
- changes in RedstoneControl API
- fixed line separator in lang file depending on platform
- fixed vertex packaging in IntArrayModels
- fixed TileEntity duplicate load event

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.6
Changes:
- fixed invalid data packets causing crash on server side due to bug in logging code
- fixed sending invalid synchronization packet data due to remaining trash bytes in buffer
- added functions to assign NBT data to Items and Fluids in recipe script
- added optional stack click transfer target to GlitchSaveSlot
- added ProgressBar fill mode with reverse anchored texture
- imported RedstoneControl API

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.5
Changes:
- fix server crash due to invalid access of client only code

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.4
Changes:
- added timer in TickRegistry to simplify response synchronization
- expanded in-game tool-tip editor documentation
- Turkish localization added by Emirhangg

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.3
Changes:
- fixed the TextureStitchEvent issue: this library now comes with its own type of TextureMap and matching TextureStitchEvent for modded use
- several fixes and improvements for ModularGui and its components
- added utilities for state synchronization via network packets
- added a new better network packet handling system
- added a new Gui & Container handling system
- the old network/gui system became deprecated but should still be fully backwards compatible

Dependencies:
- for MC-1.12.2
- forge-14.23.5.2768 (or newer)

v6.4.2
Changes:
- fixed gui component positioning
- tweaked white-listing of array types in runtime classloading "fire-wall"
- added itemstack mode for BaseTileEntity's state load/store utility

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.4.1
Changes:
- Hot fix for Redstone Control (game crash when rendering Redstone Sockets with smooth lightning disabled and there are pipes, gates or lonely wire anchors next to it)

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.4.0
Changes:
- added some utility features
- added hideable inventory slots
- added TextureAtlasSprite impl. that supports non square aspect ratios
- added convenient load/store state methods in BaseTileEntity
- generalized MultipartModel so it can be applied to arbitrary blocks
- enhanced state mapping and model providers for the MultipartModel

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.7
Changes:
- enabled Key repreat events in ModularGUI (more convenient typing in text fields)
- made some useful utility method available as public static

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.6
Changes:
- changed the script '#' operator for numbers to be floor rounding instead of RNG
- added some more render utility functions
- fixed handling of null Boundingboxes in MultipartBlock
- added a Hybrid implementation between normal and fast TESR
- some other useful tweaks
- fixed config version check crashing if file is empty

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.5
Changes:
- added support for any numeric type with %u (SI-scale) formatting
- fixed existing config files being ignored during first launch or when compiled.dat deleted

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.4
Changes:
- added yes/no text formatting for boolean arguments
- added support to specify particle textures in script models
- fixed some bugs that were introduced during script update

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.3
Changes:
- fixed a script that fallback values assigned to config variables weren't boxed in to operand types properly
- fixed DimPos not matching properly with BlockPos in map lookups which caused VerticallyStackedDimensions#3

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.2
Changes:
- fixed script compilation bug with undefined local variables

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.1
Changes:
- fixed config version being ignored which caused it to be permanently overriden by the internal preset
- fixed rendering bugs in Modular Gui system
- fixed tootip handling in Modular Gui system
- added sub window features for Modular Gui system
- added runtime class generation utilities

Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.3.0
Changes:
- rework of the scripting system: the effects of operators are now defined by the operands instead of being hard coded
- fixed Recipe removal feature
- fixed potential ItemStack comparison issues by using metadata instead of damage value
- fixed incorrect quad roatation in NBT-Models
- fixed various other model & redering bugs
- fixed interdimensional Entity teleportation
- fixed argument parsing of unit scale number format feature
- fixed logging to use the propper mod log instead of deprecated FMLLog
- created a new modular GUI framework
- added a server side only version of ITickable for TileEntities
- added various other utilities
- removed some ancient InductiveAutomation utilities & APIs
- removed deprecated multiblock network features
- moved several utilities and APIs from InductiveLogistics into this core mod
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.8
Changes:
- provided more control over side solidness in Pipe Block template
- made config script execution more forgiving with errors
- added a server side only version of ITickable
- implemented literal direct mode in localisation utilites
- created combined World/dimension + BlockPos utility object
- fixed interdimensional teleportation for entities with passengers
- added optional dimension parameter to "worldgen" script recipe handler
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.7
Changes:
- added comparator support for my universal block template
- added middle-click quick select and other tweaks to slot interaction with "GlitchSaveSlots" and "HoloSlots"
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.6
Changes:
- added an ingame tooltip editor for dev purposes
- fixed fluid duplication if tank gets overfull
- fixed scroll input being backwards for number spinner GUI components
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.5
Changes:
- generalized filtering implementation for filtered GUI slots
- added an improved variant of Multiblock Network system
- added internal autodetection of config versions
- made Text Fields trim over long strings and support cursor scrolling
- fix fluid duplication bug in case a tank gets overfull
- some added internal utility methods
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.4
Changes:
- added center culling feature to multipart block renderer
- added opaqueness feature to block covers (for use in render optimization)
- added improved FakePlayer implementation
- disabled debug logging of ticks (fixes spam issues)
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.3
Changes:
- maintenance of multiblock-networks is now using delayed tick events only
- added a continuous tick subscription system to TickRegistry
- fixed TickRegistry sometimes getting tick requests from client side
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.2
Changes:
- fixed bugs in multiblock shared networks where components where added into dead networks
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.1
Changes:
- fixed graphics glitches in pipe covers (incorrect Z-level arrangement) and also chisel blocks used as cover should no longer be invisible.
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.2.0
Changes:
- fixed GUI titles using Item name instead of own locstring
- changed internal neighbor event system in order to get rid of some TileEntity invalidation hacking that could potentially have had problematic side effects.
- fixed certain TileEntities running into ploblems with forge's dormant chunk caching.
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.1.0
Changes:
- added Chinese localization made by @Snownee
- cover blocks rendered on pipes now support Tint-colors and semi-transparency
- added new modelloader that uses NBT-files (that can be exported from a Blender script)
- added a builtin 3D ingot model (for use with custom crafting items)
- crafting items defined in config can now have custom model path and display name
- added config script module for Immersive Engineering to add / remove machine recipes
- fixed manipulation of crafting recipes via config not being fully implemented
- fixed init methods in core.rcp config script being executed twice
- fixed block face shapes and solidness (1.12 only bug)
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.8
Changes:
- added energy API integration for VoidCraft (still experimental)
- energy conversions can be changed or disabled via config now
- fixed some item rendering crash
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.7
Changes:
- added utility to fix that TileEntities didn't notify chunks to get saved
- added new area protection api
- fixed visual glitches with fluid container slots and other bugs
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.6
Changes:
- fixed stacking bugs caused by comparing items without accounting for NBT
- fixed possibly returning ghost fluid stacks (with 0mB amount) from draining fluid tanks
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.5
Changes:
- fixed AutomatedRedstone#6 : possible client crash when double clicking on items in GUIs
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.4
Changes:
- fixed possible render crash with pipes
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.3
Changes:
- remade block cover system
- fixed blocks dropping unnecessary items in creative
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.2
Changes:
- allow blocks to not use special sneak placement
- gui components can be disabled
- text fields can optionally allow the 'ï¿½' symbol
- fixed GUIs not rendering background and item tool tips
- fixed OpenComputers API not working
- fixed fluid tank slot rendering on colored fluids
- fixed possible server crash when receiving invalid packet data from client
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.1
Changes:
- fixed item multiplication bug in item extraction utility method
- fixed color formating conflicting with selection underline in GUI info tabs
- fixed rendering bugs for some blocks in side config overlay
- fix crash in case no block/item has loaded script models before TESR
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

v6.0.0
Changes:
- updated to MC-1.12.2
- refactored package structure and removed depecated content
Dependencies:
- for MC-1.12.2
- forge-14.23.0.2512 (or newer)

################################# VERSIONS 1.11.2 #################################

v5.0.6
Changes:
- fix access transformer
Dependencies:
- for MC-1.11.2
- forge-13.20.0.2315 (or newer)

v5.0.5
Changes:
- some added utility
- supporting usage of more abstract Inventories for Item-GUIs- fixed some serious item multiplication bugs
- fixed HoloSlot dragging
- fixed lightning bug in side config overlay
- fixed some problems with TileEntity invalidation
Dependencies:
- for MC-1.11.2
- forge-13.20.0.2315 (or newer)

v5.0.4
Changes:
- fix passive multiblock TileEntities not getting block changes
- add lightning render utility
- inventory bug fixes
Dependencies:
- for MC-1.11.2
- forge-13.20.0.2315 (or newer)

v5.0.3:
Changes:
- support using unit scale formatting in localization directly
- allow all item damage variants of DefaultItem to share a common tooltip
- added template for Block and Item with generic metadata states
- added a 'tags must be equal' mode to NBTRecipe
- bug fixes
Dependencies:
- for MC-1.11.2
- forge-13.20.0.2315 (or newer)

v5.0.2:
Changes:
- fixed model bugs
- fixed TileEntity neighbor notification
- model system improvements
- fixed null-ItemStack bugs
Dependencies:
- for MC-1.11.2
- forge-13.20.0.2315 (or newer)

################################# VERSIONS 1.9.4 #################################
4.1.1 Changes (from 1.8.9-3.2.2):
- added OC node save & load methods to ComputerAPI
- added world generation and a few utility functions to recipe script.
- fixed conflict with IInventory interface

4.1.0 Changes:
- update to MC-1.9.4
- fixed initial client synchronization for TileEntities
- included 3.2.0 changes

################################# VERSIONS 1.9 #################################

4.0.3 Changes (from 1.8.9-3.2.2):
- added OC node save & load methods to ComputerAPI
- added world generation and a few utility functions to recipe script.
- fixed conflict with IInventory interface
- added script language for external recipe definition via config.

4.0.2 Changes:
- fixed wrong click behavior in slots
- improved Area Protection API (1.8.9)
- included changes from v3.1.1:
 - reimplemented RedstoneFlux
 - added EnergyAPI for OpenComputers
 - improved side-config
 - bug fixes

################################# VERSIONS 1.8.9 #################################

3.2.2 Changes:
- added OC node save & load methods to ComputerAPI
- added world generation and a few utility functions to recipe script.
- fixed conflict with IInventory interface

3.2.0 Changes:
- added script language for external recipe definition via config.

3.1.3 Changes:
- fixed NBTRecipe ignoring tag of original output item.
- added recipe handler for Heat Radiator.
- improved Chunk Protection API.

3.1.1 Changes:
- reimplemented RedstoneFlux
- added EnergyAPI for OpenComputers
- improved side-config
- bug fixes

3.1.0 Changes:
- improved pipe rendering performance (only effective when updating mods too)
- added my own model loader for use in TESRs

3.0.4 Changes:
- required for Inductive Automation 4.0.3

3.0.3 Changes:
- required for Inductive Automation 4.0.2

3.0.2 Changes:
- fixed tool tip display bugs
- fixed block collision handling
- fixed rendering bugs
- improved recipe API
- added Fluid rendering

################################# VERSIONS 1.7.10 #################################

Changes 2.4.1:
-fixed item transfer bugs
Changes 2.4.2:
-updated API for Automated Redstone 2.2.0
Changes 2.4.3:
-updated tesla-API for Inductive Automation 3.4.3
Changes 2.5.0:
-updated energy API for Inductive Automation 3.5.0
-fixed crash when removing held item while its GUI is open.
Changes 2.5.1:
-fixed possible infinite loop caused during automatic import by portable machines.
-bug fixes for Inductive Automation API 
Changes 2.5.2:
-bug fixes
Changes 2.6.1:
-Operating Area API extended
Changes 2.6.2:
-changed pipe block template for complex hitbox
-some fixes in Inductive Automation recipe API
Changes 2.6.3:
-some changes in EnergyAPI
Changes 2.7.1:
-added chunkloading to Inductive Automation protection system API
Changes 2.7.2:
-improved Oredictionary compatibility in AutomationRecipes-API
-fixed render problem in BlockPipe-template